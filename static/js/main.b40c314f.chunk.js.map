{"version":3,"sources":["logo.svg","components/yolo.js","assets/person.jpg","assets/kite.jpg","assets/giraffe.jpg","assets/scream.jpg","assets/dog.jpg","assets/eagle.jpg","shared/imgInfo.js","assets/horses.jpg","components/ImgClassification.js","App.js","reportWebVitals.js","index.js"],"names":["console","log","IMAGES","id","image","kite","name","description","person","giraffe","dog","scream","eagle","ImageClassification","props","setPred","pred","pic","setState","predictions","selectedImg","classifyImg","classifier","ml5","document","getElementById","predict","err","results","then","state","scroll","bind","direction","imgCon","getElementsByClassName","far","width","pos","scrollLeft","animate","Card","CardImg","top","src","alt","CardBody","CardTitle","CardText","pictures","this","pics","map","className","onClick","height","tag","length","i","probability","Math","floor","class","renderPic","Component","App","Navbar","dark","color","NavbarBrand","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","element","React","createElement"],"mappings":"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","file":"static/js/main.b40c314f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import * as ml5 from \"ml5\";\n\n/* Add implementation of object detection by using yolo model*/\n\nconsole.log(\"YOLO Model Ready!\");\n","export default __webpack_public_path__ + \"static/media/person.dcdc0e0f.jpg\";","export default __webpack_public_path__ + \"static/media/kite.597f89bf.jpg\";","export default __webpack_public_path__ + \"static/media/giraffe.671bebd0.jpg\";","export default __webpack_public_path__ + \"static/media/scream.266fa10e.jpg\";","export default __webpack_public_path__ + \"static/media/dog.8ff4b2e4.jpg\";","export default __webpack_public_path__ + \"static/media/eagle.2dc255d7.jpg\";","import person from \"../assets/person.jpg\";\r\nimport kite from \"../assets/kite.jpg\";\r\nimport giraffe from \"../assets/giraffe.jpg\";\r\nimport scream from \"../assets/scream.jpg\";\r\nimport dog from \"../assets/dog.jpg\";\r\nimport eagle from \"../assets/eagle.jpg\";\r\nimport horses from \"../assets/horses.jpg\";\r\n\r\nexport const IMAGES = \r\n    [\r\n        {\r\n            id: 'kite-img',\r\n            image: kite,\r\n            name: '1. Kite',\r\n            description: 'Description: Ocean, Kite and people',\r\n        },\r\n        {\r\n            id: 'person-img',\r\n            image: person,\r\n            name: '2. Person',\r\n            description: 'Description: Person, a horse and a dog',\r\n        },\r\n        {\r\n            id: 'giraffe-img',\r\n            image: giraffe,\r\n            name: '3. Giraffe',\r\n            description: 'Description: Trees, A giraffe and an zebra',\r\n        },\r\n        {\r\n            id: 'dog-img',\r\n            image: dog,\r\n            name: '4. Dog',\r\n            description: 'Description: A dog, a car and a bike',\r\n        },\r\n        {\r\n            id: 'horses-img',\r\n            image: horses,\r\n            name: '5. Horses',\r\n            description: 'Description: Horses',\r\n        },\r\n        {\r\n            id: 'scream-img',\r\n            image: scream,\r\n            name: '6. Scream',\r\n            description: 'Description: The Scream, a painting by Edvard Munch',\r\n        },\r\n        {\r\n            id: 'eagle-img',\r\n            image: eagle,\r\n            name: '7. Eagle',\r\n            description: 'Description: An eagle',\r\n        }\r\n    ]","export default __webpack_public_path__ + \"static/media/horses.c5078be7.jpg\";","import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle\r\n} from 'reactstrap';\r\nimport * as ml5 from \"ml5\";\r\nimport './ImgClassification.css';\r\n\r\n/* This program displays multiple images and their prediction results\r\n * Media is a container that can hold images and text */\r\n\r\n/* Lifecycle methods:\r\n    constructor -> render -> componentDidMount\r\n\r\n*/\r\n\r\nclass ImageClassification extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            predictions: [],\r\n            selectedImg: null\r\n        };\r\n        this.scroll = this.scroll.bind(this);\r\n    }\r\n\r\n    scroll(direction) {\r\n        const imgCon = document.getElementsByClassName('image-container')[0];\r\n        let far = imgCon.width() / 2 * direction;\r\n        let pos = imgCon.scrollLeft() + far;\r\n        imgCon.animate({ scrollLeft: pos }, 1000)\r\n    }\r\n\r\n    setPred = (pred, pic) => {\r\n        this.setState({\r\n            predictions: pred,\r\n            selectedImg: pic\r\n        });\r\n    }\r\n\r\n\r\n    classifyImg = (pic) => {\r\n        const classifier = ml5.imageClassifier('MobileNet', modelLoaded);\r\n\r\n        function modelLoaded() {\r\n            console.log('Model Loaded!');\r\n        }\r\n        const image = document.getElementById(pic.id);\r\n        classifier.predict(image, 5, function (err, results) {\r\n            return results;\r\n        }).then((results) => {\r\n            this.setPred(results, pic)\r\n            console.log(results);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"ImgClassification component componentDidMount is invoked\");\r\n    }\r\n\r\n    renderPic(pic) {\r\n        if (pic != null)\r\n            return (\r\n                <Card>\r\n                    <CardImg top src={pic.image} alt={pic.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{pic.name}</CardTitle>\r\n                        <CardText>{pic.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        else\r\n            return (\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const pictures = this.props.pics.map((pic) => {\r\n            return (\r\n                <div className=\"image\">    \r\n                    <Card key={pic.id} onClick={() => this.classifyImg(pic)}>\r\n                        <CardImg width=\"80%\" height=\"160px\" src={pic.image} alt={pic.name} id={ pic.id } />\r\n                        <CardTitle tag=\"h5\" >{pic.name}</CardTitle>\r\n                    </Card>\r\n                </div>\r\n            );    \r\n        });\r\n\r\n        let predictions = (<div className=\"loader\"> </div>);\r\n        if (this.state.predictions.length > 0) {\r\n            predictions = this.state.predictions.map((pred, i) => {\r\n                let { className, probability } = pred;\r\n                probability = Math.floor(probability * 10000) / 100 + \"%\";\r\n                return (\r\n                    <div>\r\n                        <div key={i + \"\"}> { i+1 }. {className} at {probability}</div>\r\n                    </div>\r\n                );\r\n\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                For more information about ML5.js, click ML5.js Home and learn more!\r\n                <div className=\"main\">\r\n                    <h5> Pick an image from the follwing gallery and check result for your selection. </h5>\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"image-container\">\r\n                            {pictures}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        {this.renderPic(this.state.selectedImg)}\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        Prediction Results of Selected Image: \r\n                        <p>\r\n                            {predictions}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageClassification;","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport './App.css';\nimport './components/yolo.js';\nimport { IMAGES } from './shared/imgInfo';\nimport ImageClassification from './components/ImgClassification';\n\n\n/*function App() {*/\nclass App extends Component {\n    constructor(props) {\n        super(props);\r\n        this.state = {\r\n            pics: IMAGES\r\n        };\r\n    }\n\n    render() {\n        return(\n        <div className=\"App\">\n            <Navbar dark color=\"primary\">\n                <div className=\"container\">\n                    <NavbarBrand href=\"https://ml5js.org/\"> ML5.js Home </NavbarBrand>\n                </div>\n            </Navbar>\n            <ImageClassification pics={this.state.pics} />\n        </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n\t\t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconst element = React.createElement(\n\t'h1',\n\t{className:'img'},\n\t'Object Recognition'\n);\nReactDOM.render(element, document.getElementById('title'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}